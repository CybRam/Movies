// -----------------------------------------------------
// Assignment 2
// Question: 3
// Written by: James Bautista and Ramiro Juarez
// -----------------------------------------------------

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Serializable;
import java.util.Scanner;

public class Movie implements Serializable{
	private int year;
	private String title;
	private int duration;
	private String genres;
    private String rating;
    private double score;
    private String director;
    private String actor1;
    private String actor2;
    private String actor3;

	public Movie(int year, String title, int duration, String genres, String rating, double score, String director,
			String actor1, String actor2, String actor3) {
		this.year = year;
		this.title = title;
		this.duration = duration;
		this.genres = genres;
		this.rating = rating;
		this.score = score;
		this.director = director;
		this.actor1 = actor1;
		this.actor2 = actor2;
		this.actor3 = actor3;
	}

	public Movie(Movie otherMovie){
		this(otherMovie.year, otherMovie.title, otherMovie.duration, otherMovie.genres, otherMovie.rating, otherMovie.score, otherMovie.director, otherMovie.actor1, otherMovie.actor2, otherMovie.actor3);
	}

	public int getYear() {
		return year;
	}


	public void setYear(int year) {
		this.year = year;
	}


	public String getTitle() {
		return title;
	}


	public void setTitle(String title) {
		this.title = title;
	}


	public int getDuration() {
		return duration;
	}


	public void setDuration(int duration) {
		this.duration = duration;
	}


	public String getGenres() {
		return genres;
	}


	public void setGenres(String genres) {
		this.genres = genres;
	}


	public String getRating() {
		return rating;
	}


	public void setRating(String rating) {
		this.rating = rating;
	}


	public double getScore() {
		return score;
	}


	public void setScore(double score) {
		this.score = score;
	}


	public String getDirector() {
		return director;
	}


	public void setDirector(String director) {
		this.director = director;
	}


	public String getActor1() {
		return actor1;
	}


	public void setActor1(String actor1) {
		this.actor1 = actor1;
	}


	public String getActor2() {
		return actor2;
	}


	public void setActor2(String actor2) {
		this.actor2 = actor2;
	}


	public String getActor3() {
		return actor3;
	}


	public void setActor3(String actor3) {
		this.actor3 = actor3;
	}
	
	
	@Override
	public String toString() {
		return "Movie [year=" + year + ", title=" + title + ", duration=" + duration + ", genres=" + genres
				+ ", rating=" + rating + ", score=" + score + ", director=" + director + ", actor1=" + actor1
				+ ", actor2=" + actor2 + ", actor3=" + actor3 + "]";
	}
	

	@Override
	public boolean equals(Object otherObject) {
		if(otherObject == null) {
			return false;
		}
		if(getClass() != otherObject.getClass()) {
			return false;
		}
		Movie otherMovie = (Movie) otherObject;
		if(this.year == (otherMovie.year)
				&& this.title.equals(otherMovie.title)
				&& this.duration == otherMovie.duration
				&& this.genres.equals(otherMovie.genres) 
				&& this.rating.equals(otherMovie.rating)
				&& this.score == otherMovie.score
				&& this.director.equals(otherMovie.director)
				&& this.actor1.equals(otherMovie.actor1)
				&& this.actor2.equals(otherMovie.actor2)
				&& this.actor3.equals(otherMovie.actor3)){
			return true;
		}else {
			return false;
		}
}

	public static void main(String[] args) {
		
  
		

		
		// part 1's manifest file
		String part1_manifest = "part1_manifest.txt";
		
		// part 2's manifest file
		String part2_manifest = do_part1(part1_manifest);
		
		// part 3's manifest file
		String part3_manifest = do_part2(part1_manifest,part2_manifest);
	
	}

	public static String do_part1(String part1_manifest) {
		String inputFile = part1_manifest; // Path to the file you want to read from
		String outputFile = "bad_movie_records.txt"; // Path to the new file you want to create
		Scanner reader = null;
		PrintWriter writer = null;
		
        try {
        	// Open the input file for reading
        	reader = new Scanner(new FileInputStream(inputFile));
        	// Open the output file for writing
        	writer = new PrintWriter(new FileOutputStream(outputFile));
        	
        	// read
        	while(reader.hasNextLine()) {
        		String line = reader.nextLine();
        		checkBadMovieRecords(line);
        		writer.println(line);
        	}
        	// close
			reader.close();
			writer.close();

		} 
        catch (IOException e) {
        	System.out.println("An error occurred: " + e.getMessage());
        	e.printStackTrace();
        }
        
		return null;
	}
	
	public static boolean checkBadMovieRecords(String line) {
		boolean goodMovieRecords = false;
		Scanner reader = null;
		try {
			// Open the input file for reading
        	reader = new Scanner(new FileInputStream(line));
		reader.useDelimiter(",");
        	if(reader.hasNextLine()) {
        		goodMovieRecords = true;
        	}
        	reader.close();
		}
		catch (IOException e) {
        	System.out.println("An error occurred: " + e.getMessage());
        	e.printStackTrace();
        }
		return goodMovieRecords;
	}
	
	public static String do_part2(String part1_manifest,String part2_manifest) {
		String outputFile = part1_manifest; // Path to the new file you want to create
		return null;
	}
	
	public static String do_part3(String part2_manifest) {
		return null;
	}
	
}
